apply plugin: 'application'

mainClassName = 'de.ubleipzig.metadata.scanner.Scanner'
description = 'A Camel service that produces OCR annotations from an IIIF image source'

javaModule {
    name = 'de.ubleipzig.metadata.scanner'
}

ext {
    arch = System.getProperty("os.arch");

    if(arch == 'amd64'){
        arch = 'x86_64'
    }
    opencvBinaryClassifer = 'linux-'+arch;
}

configurations {
    all {
        exclude(group: 'commons-logging', module: 'commons-logging')
        exclude(group: 'org.apache.camel', module: 'camel-core-osgi')
        exclude group: 'com.sun.xml.bind', module: 'jaxb-core'
        exclude group: 'com.sun.xml.bind', module: 'jaxb-impl'
        exclude group: 'javax.inject', module: 'javax.inject'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient-osgi'
        exclude group: 'org.apache.httpcomponents', module: 'httpcore-osgi'
    }
}

dependencies {
    implementation("ch.qos.logback:logback-classic:$logbackVersion")
    implementation("commons-io:commons-io:2.6")
    implementation("org.xmlbeam:xmlprojector:${xbeamVersion}")
    implementation("org.bytedeco.javacpp-presets:tesseract:$tesseractVersion")
    implementation group: 'org.bytedeco.javacpp-presets', name: 'tesseract', version: tesseractVersion, classifier: opencvBinaryClassifer
    implementation group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: leptonicaVersion, classifier: opencvBinaryClassifer
    implementation("de.ubleipzig:commons-rdf-jena-jpms:$commonsRdfJenaVersion")
    implementation("javax.activation:javax.activation-api:$activationApiVersion")
    implementation("javax.xml.bind:jaxb-api:$jaxbVersion")
    implementation("org.apache.camel:camel-jetty9:$camelVersion")
    implementation("org.apache.camel:camel-http4:$camelVersion")
    implementation("org.apache.httpcomponents:httpclient-cache:$httpClientOsgiVersion")


    testImplementation("org.apache.camel:camel-test:$camelVersion")
    testImplementation("ch.qos.logback:logback-classic:$logbackVersion")
}
